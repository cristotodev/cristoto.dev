---
import { WEBMENTION_PINGBACK, WEBMENTION_URL } from "astro:env/client";
import { siteConfig } from "@/site.config";
import type { SiteMeta } from "@/types";
import { optimizeMetaDescription, optimizeTitle } from "@/utils/seo";
import "@/styles/global.css";

type Props = SiteMeta & {
	category?: string;
	tags?: string[];
};

const { articleDate, description, ogImage, title, category, tags } = Astro.props;

// Optimize title and description for SEO
const optimizedTitle = optimizeTitle(title, category, siteConfig.title);
const optimizedDescription = optimizeMetaDescription(description || siteConfig.description, tags);

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL(
	ogImage ? ogImage : "/social-card.png",
	Astro.url,
).href;
---

<meta charset="utf-8" />
<meta content="width=device-width, initial-scale=1.0" name="viewport" />
<title>{optimizedTitle}</title>

{/* Icons */}
<link href="/icon.svg" rel="icon" type="image/svg+xml" />
{
	import.meta.env.PROD && (
		<>
			{/* Favicon & Apple Icon */}
			<link rel="icon" href="/favicon-32x32.png" type="image/png" />
			<link href="/icons/apple-touch-icon.png" rel="apple-touch-icon" />
			{/* Manifest */}
			<link href="/manifest.webmanifest" rel="manifest" />
		</>
	)
}

{/* Canonical URL */}
<link href={canonicalURL} rel="canonical" />

{/* Primary Meta Tags */}
<meta content={optimizedTitle} name="title" />
<meta content={optimizedDescription} name="description" />
<meta content={siteConfig.author} name="author" />
<meta content={siteConfig.title} name="publisher" />
<meta content={siteConfig.lang} name="language" />
<meta content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1" name="robots" />

{/* Keywords */}
{tags && tags.length > 0 && (
	<meta content={tags.join(", ")} name="keywords" />
)}

{/* Theme Colour */}
<meta content="#3b82f6" name="theme-color" />
<meta content="#3b82f6" name="msapplication-TileColor" />

{/* Open Graph / Facebook */}
<meta content={articleDate ? "article" : "website"} property="og:type" />
<meta content={title} property="og:title" />
<meta content={optimizedDescription} property="og:description" />
<meta content={canonicalURL} property="og:url" />
<meta content={siteConfig.title} property="og:site_name" />
<meta content={siteConfig.ogLocale} property="og:locale" />
<meta content={socialImageURL} property="og:image" />
<meta content="1200" property="og:image:width" />
<meta content="630" property="og:image:height" />
{
	articleDate && (
		<>
			<meta content={siteConfig.author} property="article:author" />
			<meta content={articleDate} property="article:published_time" />
			{category && <meta content={category} property="article:section" />}
			{tags && tags.slice(0, 6).map(tag => (
				<meta content={tag} property="article:tag" />
			))}
		</>
	)
}

{/* Twitter */}
<meta content="summary_large_image" property="twitter:card" />
<meta content={canonicalURL} property="twitter:url" />
<meta content={title} property="twitter:title" />
<meta content={optimizedDescription} property="twitter:description" />
<meta content={socialImageURL} property="twitter:image" />

{/* Sitemap */}
<link href="/sitemap-index.xml" rel="sitemap" />

{/* RSS auto-discovery */}
<link
	href="/rss.xml"
	rel="alternate"
	title={siteConfig.title}
	type="application/rss+xml"
/>

{/* Webmentions */}
{
	WEBMENTION_URL && (
		<>
			<link href={WEBMENTION_URL} rel="webmention" />
			{WEBMENTION_PINGBACK && (
				<link href={WEBMENTION_PINGBACK} rel="pingback" />
			)}
		</>
	)
}

<meta content={Astro.generator} name="generator" />

{/* Performance Optimizations */}
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link rel="dns-prefetch" href="https://www.google-analytics.com" />

{/* Critical CSS preload */}
<link rel="preload" href="/fonts/inter.woff2" as="font" type="font/woff2" crossorigin />

{/* Schema.org JSON-LD */}
<script type="application/ld+json" set:html={JSON.stringify({
	"@context": "https://schema.org",
	"@type": "WebSite",
	"name": siteConfig.title,
	"description": siteConfig.description,
	"url": canonicalURL.origin,
	"author": {
		"@type": "Person",
		"name": siteConfig.author
	},
	"potentialAction": {
		"@type": "SearchAction",
		"target": `${canonicalURL.origin}/search?q={search_term_string}`,
		"query-input": "required name=search_term_string"
	}
}, null, 0)} />

{/* Security Headers */}
<meta http-equiv="X-Content-Type-Options" content="nosniff" />
<meta http-equiv="X-Frame-Options" content="DENY" />
<meta http-equiv="X-XSS-Protection" content="1; mode=block" />
